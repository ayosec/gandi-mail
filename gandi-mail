#!/bin/bash

set -euo pipefail

: "${GANDI_ORIGIN:=https://api.gandi.net}"


ARGV=("$@")

usage() {
  cat <<-HELP
	Usage $0 [command]

	  COMMANDS:

	  domains                 Show domains owned by your user.
	  domain DOMAIN           Show information about a domain.

	  emails ls DOMAIN        Show emails in a specific domain.
	  emails add EMAIL        Add a new email to a domain.
	HELP
  exit 1
}

api_request() {
  if [ -z "${GANDI_TOKEN:-}" ]
  then
    local CONFIG_DIR=${XDG_CONFIG_HOME:-$HOME/.config}/gandi-emails
    GANDI_TOKEN=$(gpg -qd "$CONFIG_DIR/api-key.gpg")
  fi

  local url="$GANDI_ORIGIN$1"
  shift

  declare -a body
  if [ ! -t 0 ]
  then
    body=(-H "Content-Type: application/json" --data-binary @-)
  fi

  curl --silent --tlsv1.3 -H "Authorization: Apikey $GANDI_TOKEN" "$url" "$@" "${body[@]}"
}

cmd() {
  HANDLER=$1
  shift
  local argv=("${ARGV[@]}")

  while [ $# -gt 0 ]
  do
    if [ "$1" = "${argv[0]:-}" ]
    then
      shift
      argv=("${argv[@]:1}")
    else
      return 0
    fi
  done

  "$HANDLER" "${argv[@]}"
  exit
}

domains_list() {
  [ $# -eq 0 ] || usage

  (
    printf 'FQDN\tAUTORENEW\tCREATED AT\tREGISTRY ENDS AT\n'

    api_request "/v5/domain/domains" \
      | jq -r  '
          .[]
            | [
                .fqdn,
                .autorenew,
                (.dates.created_at | split("T") | .[0]),
                (.dates.registry_ends_at | split("T") | .[0])
              ]
            | join("\t")
        ' \
  ) | column -ts $'\t'
}

domains_show() {
  [ $# -eq 1 ] || usage
  api_request "/v5/domain/domains/$1" | jq .
}

emails_list() {
  [ $# -eq 1 ] || usage

  (
    printf 'ADDRESS\tTYPE\tQUOTA USED\tALIASES\tID\n'

    api_request "/v5/email/mailboxes/$1?per_page=100" \
      | jq -r  '
          .[]
            | [
                .address,
                .mailbox_type,
                .quota_used,
                .alias_count,
                .id
              ]
            | join("\t")
        ' \
  ) | column -ts $'\t'
}

emails_add() {
  [ $# -eq 1 ] || usage

  local password
  local new_email=$1
  local login=${new_email/@*}
  local domain=${new_email/*@}

  read -rsp "Password for $new_email:" password
  echo

  jq \
      --arg login "$login" \
      -R <<<"$password"    \
      '{
        login: $login,
        mailbox_type: "standard",
        password: .
      }' \
    | api_request "/v5/email/mailboxes/$domain" \
    | jq .
}

cmd domains_list domains
cmd domains_show domain

cmd emails_list emails ls
cmd emails_add emails add

usage
